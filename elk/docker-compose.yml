version: '3'

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTICSEARCH_VERSION:-6.8.0}
    container_name: elasticsearch
    healthcheck:
      test: curl -f -s -o /dev/null http://localhost:9200/_cat/health?v&ts=false && echo OK
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    environment:
      discovery.type: single-node
      xpack.monitoring.collection.enabled: "false"
      ES_JAVA_OPTS: -Xmx256m -Xms256m
    network_mode: bridge
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.elasticsearch.rule=Host(`${ELASTICSEARCH_VIRTUAL_HOST:-es.localdomain}`)
      - traefik.http.routers.elasticsearch.entrypoints=${ELASTICSEARCH_ENTRYPOINTS:-web}

  cerebro:
    build:
      context: cerebro
    container_name: cerebro
    healthcheck:
      test: curl -f -s -o /dev/null http://localhost:9000/connect/hosts && echo OK
    expose:
      - 9000
    volumes:
      - ./cerebro/config/application.conf:/opt/cerebro/conf/application.conf:ro
    links:
      - elasticsearch
    network_mode: bridge
    restart: unless-stopped
    depends_on:
      - elasticsearch
    labels:
      - traefik.enable=true
      - traefik.http.routers.cerebro.rule=Host(`${CEREBRO_VIRTUAL_HOST:-cerebro.localdomain}`)
      - traefik.http.routers.cerebro.entrypoints=${CEREBRO_ENTRYPOINTS:-web}

  logstash:
    image: docker.elastic.co/logstash/logstash:${LOGSTASH_VERSION:-6.8.0}
    container_name: logstash
    healthcheck:
      test: curl -f -s -o /dev/null http://localhost:9600 && echo OK
    ports:
      - 5000:5000
      - 9600:9600
    volumes:
      - ./logstash/config:/usr/share/logstash/config:ro
      - ./logstash/config/pipeline:/usr/share/logstash/pipeline:ro
    links:
      - elasticsearch
    environment:
      LS_JAVA_OPTS: -Xmx256m -Xms256m
      REDIS_HOST: 172.17.0.1
      ELASTICSEARCH_HOST: elasticsearch
    network_mode: bridge
    restart: unless-stopped
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:${KIBANA_VERSION:-6.8.0}
    container_name: kibana
    healthcheck:
      test: curl -f -s -o /dev/null http://localhost:5601/status && echo OK
    ports:
      - 5601:5601
    links:
      - elasticsearch
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_URL: http://elasticsearch:9200
    network_mode: bridge
    restart: unless-stopped
    depends_on:
      - elasticsearch
    labels:
      - traefik.enable=true
      - traefik.http.routers.kibana.rule=Host(`${KIBANA_VIRTUAL_HOST:-kibana.localdomain}`)
      - traefik.http.routers.kibana.entrypoints=${KIBANA_ENTRYPOINTS:-web}
